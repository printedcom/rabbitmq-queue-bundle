services:
  printed.bundle.queue.service.queue_bundle_options:
    class: 'Printed\Bundle\Queue\ValueObject\QueueBundleOptions'
    arguments:
      - # (argument populated dynamicly in QueueExtension.php)

  # Queue Task Dispatcher.
  printed.bundle.queue.service.queue_task_dispatcher:
    class: 'Printed\Bundle\Queue\Service\QueueTaskDispatcher'
    arguments:
      - '@doctrine.orm.entity_manager'
      - '@monolog.logger.queue'
      - '@validator'
      - # (argument populated dynamicly in QueueExtension.php)
      - '@printed.bundle.queue.service.uuid'
      - '@printed.bundle.queue.service.queue_bundle_options'
    public: false

  # Queue Maintenance Manager.
  printed.bundle.queue.service.queue_maintenance:
    class: 'Printed\Bundle\Queue\Service\QueueMaintenance'
    arguments:
      - # (argument populated dynamicly in QueueExtension.php)
    public: false

  printed.bundle.queue.service.queue_maintenance.filesystem_queue_maintenance_strategy:
    class: 'Printed\Bundle\Queue\Service\QueueMaintenance\FilesystemQueueMaintenanceStrategy'
    arguments:
      - '%kernel.cache_dir%'
    public: false

  printed.bundle.queue.service.queue_maintenance.cache_queue_maintenance_strategy:
    class: 'Printed\Bundle\Queue\Service\QueueMaintenance\CacheQueueMaintenanceStrategy'
    arguments:
      - # (argument populated dynamicly in QueueExtension.php)
      - "@logger"
    public: false

  # New deployments detector.
  printed.bundle.queue.service.new_deployments_detector:
    class: 'Printed\Bundle\Queue\Service\NewDeploymentsDetector'
    arguments:
      - # (argument populated dynamicly in QueueExtension.php)
    public: false

  printed.bundle.queue.service.new_deployments_detector.noop_strategy:
    class: 'Printed\Bundle\Queue\Service\NewDeploymentsDetector\NoopNewDeploymentsDetectorStrategy'
    public: false

  printed.bundle.queue.service.new_deployments_detector.cache_strategy:
    class: 'Printed\Bundle\Queue\Service\NewDeploymentsDetector\CacheNewDeploymentsDetectorStrategy'
    arguments:
      - # (argument populated dynamicly in QueueExtension.php)
      - "@logger"
    public: false

  # Vhost existence ensurer.
  printed.bundle.queue.service.rabbit_mq_vhost_existence_ensurer:
    class: 'Printed\Bundle\Queue\Service\RabbitMqVhostExistenceEnsurer'
    arguments:
      - '@logger'
      - '%rabbitmq-queue-bundle.rabbitmq_user%'
      - '%rabbitmq-queue-bundle.rabbitmq_password%'
      - '%rabbitmq-queue-bundle.rabbitmq_vhost%'
      - '%rabbitmq-queue-bundle.rabbitmq_api_base_url%'
    public: false

  # UUID service.
  printed.bundle.queue.service.uuid:
    class: 'Ramsey\Uuid\UuidFactory'
    public: false
