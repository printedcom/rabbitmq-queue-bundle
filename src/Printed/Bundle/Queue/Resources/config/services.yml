services:

  # Queue Task Dispatcher.
  printed.bundle.queue.service.queue_task_dispatcher:
    class: 'Printed\Bundle\Queue\Service\QueueTaskDispatcher'
    arguments:
      - '@doctrine.orm.entity_manager'
      - '@monolog.logger.queue'
      - '@validator'
      - '@service_container'

  # Queue Maintenance Manager.
  printed.bundle.queue.service.queue_maintenance:
    class: 'Printed\Bundle\Queue\Service\QueueMaintenance'
    arguments:
      - "@=service(parameter('rabbitmq-queue-bundle.queue_maintenance_strategy.service_name'))"

  printed.bundle.queue.service.queue_maintenance.filesystem_queue_maintenance_strategy:
    class: 'Printed\Bundle\Queue\Service\QueueMaintenance\FilesystemQueueMaintenanceStrategy'
    arguments:
      - '%kernel.cache_dir%'

  printed.bundle.queue.service.queue_maintenance.cache_queue_maintenance_strategy:
    class: 'Printed\Bundle\Queue\Service\QueueMaintenance\CacheQueueMaintenanceStrategy'
    arguments:
      - "@=service(parameter('rabbitmq-queue-bundle.cache_queue_maintenance_strategy.cache_service_name'))"

  # New deployments detector.
  printed.bundle.queue.service.new_deployments_detector:
    class: 'Printed\Bundle\Queue\Service\NewDeploymentsDetector'
    arguments:
      - "@=container.hasParameter('rabbitmq-queue-bundle.new_deployments_detector_strategy.service_name')
        ? service(parameter('rabbitmq-queue-bundle.new_deployments_detector_strategy.service_name'))
        : service('printed.bundle.queue.service.new_deployments_detector.noop_strategy')"

  printed.bundle.queue.service.new_deployments_detector.noop_strategy:
    class: 'Printed\Bundle\Queue\Service\NewDeploymentsDetector\NoopNewDeploymentsDetectorStrategy'
    arguments: []

  printed.bundle.queue.service.new_deployments_detector.cache_strategy:
    class: 'Printed\Bundle\Queue\Service\NewDeploymentsDetector\CacheNewDeploymentsDetectorStrategy'
    arguments:
      - "@=service(parameter('rabbitmq-queue-bundle.new_deployments_detector_strategy.cache_service_name'))"

  # Vhost existence ensurer.
  printed.bundle.queue.service.rabbit_mq_vhost_existence_ensurer:
    class: 'Printed\Bundle\Queue\Service\RabbitMqVhostExistenceEnsurer'
    arguments:
      - '@logger'
      - '%rabbitmq-queue-bundle.rabbitmq_user%'
      - '%rabbitmq-queue-bundle.rabbitmq_password%'
      - '%rabbitmq-queue-bundle.rabbitmq_vhost%'
      - '%rabbitmq-queue-bundle.rabbitmq_api_base_url%'

  # UUID service.
  printed.bundle.queue.service.uuid:
    class: 'Ramsey\Uuid\UuidFactory'
